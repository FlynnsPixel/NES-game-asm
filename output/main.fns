; main.asm
div_cur_loop                     = $ECB2
nt_loop                          = $C0BD
load_palettes                    = $C068
end_mul                          = $C146
right_not_pressed                = $C180
mul_end_add_loop                 = $EC6F
read_controller                  = $C233
clamp                            = $EDB5
second_compare                   = $EDC4
left_not_pressed                 = $C1A4
load_level_1                     = $C082
load_sprites                     = $C0E5
vblank_wait_main                 = $C0F8
SPRITES                          = $EC20
init_PPU                         = $C0D0
load_palettes_loop               = $C077
end_compares                     = $EDCF
end_div                          = $ECDD
end_div_shift_loop               = $ECB2
sub_short                        = $EC38
mul_byte                         = $EC4C
read_loop                        = $C23F
div_byte                         = $EC76
input_end                        = $C262
skip_g_than_cmp                  = $ECC1
div_short                        = $ECF4
LEVEL_1_MAP_0                    = $E000
clr_mem_loop                     = $C041
vblank_wait                      = $C000
LEVEL_1_MAP_1                    = $E400
div_endif                        = $ECD4
LEVEL_1_MAP_2                    = $E800
RESET                            = $C006
end_div_cur_loop                 = $ECDD
add_short                        = $EC24
load_sprites_loop                = $C0E7
nt_loop_nested                   = $C0BD
NMI                              = $C24A
PALETTE                          = $EC00
mul_add_loop                     = $EC5F
load_nametable                   = $C0B9
remainder_divisor_not_equ        = $ECEA
up_not_pressed                   = $C1BC
mul                              = $C13B
IQR                              = $C263
div_shift_loop                   = $ECA1
game_loop                        = $C0F5
down_not_pressed                 = $C1AB
div_equ                          = $EC9F
